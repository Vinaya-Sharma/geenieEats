{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Checkbox from 'expo-checkbox';\nimport { auth, db } from \"./Firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      login = _useState6[0],\n      setLogin = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toggleCheckBox = _useState8[0],\n      setToggleCheckBox = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      address = _useState10[0],\n      setAddress = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var changeState = function changeState() {\n    setLogin(!login);\n  };\n\n  var handleSignUp = function handleSignUp() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (cred) {}).catch(function (error) {\n      return console.log(error.message);\n    });\n\n    if (toggleCheckBox) {\n      setDoc(doc(db, \"companies\", email), {\n        name: name,\n        email: email,\n        address: address\n      });\n    } else {\n      setDoc(doc(db, \"users\", email), {\n        name: name,\n        email: email\n      });\n    }\n  };\n\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (cred) {}).catch(function (error) {\n      console.log(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.topCont,\n      children: [_jsx(TouchableOpacity, {\n        onPress: changeState,\n        style: login ? styles.button1 : styles.button2,\n        children: _jsx(Text, {\n          style: login ? styles.buttonText2 : styles.buttonText1,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: changeState,\n        style: login ? styles.button2 : styles.button1,\n        children: _jsx(Text, {\n          style: login ? styles.buttonText1 : styles.buttonText2,\n          children: \"Register\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [!login && _jsx(TextInput, {\n        placeholder: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(name) {\n          return setName(name);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      }), _jsxs(View, {\n        style: styles.checkboxContainer,\n        children: [!login && _jsx(Checkbox, {\n          style: {\n            marginTop: 20,\n            marginRight: 10\n          },\n          disabled: false,\n          value: toggleCheckBox,\n          onValueChange: function onValueChange(newValue) {\n            return setToggleCheckBox(newValue);\n          }\n        }), !login && _jsx(Text, {\n          style: {\n            marginTop: 20\n          },\n          children: \"Applying As A Company?\"\n        })]\n      }), !login && toggleCheckBox && _jsx(TextInput, {\n        placeholder: \"Address\",\n        style: [styles.input, {\n          marginTop: 20\n        }],\n        value: address,\n        onChangeText: function onChangeText(text) {\n          return setAddress(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [login && _jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button3,\n        children: _jsx(Text, {\n          style: styles.buttonText1,\n          children: \"Login\"\n        })\n      }), !login && _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: styles.button3,\n        children: _jsx(Text, {\n          style: styles.buttonText1,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  topCont: {\n    marginBottom: 40,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignSelf: \"center\",\n    width: \"60%\",\n    backgroundColor: \"white\",\n    borderRadius: 20\n  },\n  checkboxContainer: {\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignSelf: \"center\",\n    width: \"60%\"\n  },\n  inputContainer: {\n    width: \"80%\"\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button2: {\n    backgroundColor: \"white\",\n    width: \"60%\",\n    padding: 15,\n    borderRadius: 20,\n    alignItems: \"center\"\n  },\n  button1: {\n    backgroundColor: \"green\",\n    width: \"60%\",\n    padding: 15,\n    borderRadius: 20,\n    alignItems: \"center\"\n  },\n  button3: {\n    backgroundColor: \"white\",\n    borderColor: \"green\",\n    borderWidth: 2,\n    width: \"60%\",\n    padding: 15,\n    borderRadius: 20,\n    alignItems: \"center\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonText1: {\n    color: \"green\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonText2: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/krish/screens/Login.js"],"names":["React","useState","useEffect","Checkbox","auth","db","createUserWithEmailAndPassword","signInWithEmailAndPassword","doc","setDoc","Login","email","setEmail","password","setPassword","login","setLogin","toggleCheckBox","setToggleCheckBox","address","setAddress","name","setName","changeState","handleSignUp","then","cred","catch","error","console","log","message","handleLogin","styles","container","topCont","button1","button2","buttonText2","buttonText1","inputContainer","input","text","checkboxContainer","marginTop","marginRight","newValue","buttonContainer","button3","StyleSheet","create","flex","justifyContent","alignItems","marginBottom","flexDirection","alignSelf","width","backgroundColor","borderRadius","padding","borderColor","borderWidth","paddingHorizontal","paddingVertical","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { KeyboardAvoidingView, TextInput, TouchableOpacity, StyleSheet, Text, View } from 'react-native';\nimport Checkbox from 'expo-checkbox';\nimport {auth, db} from './Firebase'\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword} from 'firebase/auth';\nimport { doc, setDoc } from \"firebase/firestore\"; \n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [login, setLogin] = useState(true)\n    const [toggleCheckBox, setToggleCheckBox] = useState(false)\n    const [address, setAddress] = useState(\"\")\n    const [name, setName] = useState(\"\")\n\n    const changeState = () => {\n        setLogin(!login)\n    }\n    const handleSignUp = () => {\n        createUserWithEmailAndPassword(auth, email, password).then((cred) => {\n        }).catch((error) => (\n            console.log(error.message)\n        ))\n\n        if (toggleCheckBox){\n            setDoc(doc(db, \"companies\", email), {\n                name: name,\n                email: email,\n                address: address\n              });\n        }else{\n            setDoc(doc(db, \"users\", email), {\n                name: name,\n                email: email,\n              });\n        }\n    }\n    const handleLogin = () => {\n        signInWithEmailAndPassword(auth, email, password).then((cred) => {\n        }).catch((error) => {\n            console.log(error.message)\n        })\n    }\n\n  return (\n    <KeyboardAvoidingView  style={styles.container} behavior=\"padding\">\n        <View style={styles.topCont}> \n            <TouchableOpacity\n            onPress = {changeState}\n            style = {login? styles.button1:styles.button2}>\n                <Text style = {login? styles.buttonText2 : styles.buttonText1 }>\n                    Login\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n            onPress = {changeState}\n            style ={login? styles.button2:styles.button1}>\n                <Text style = {login? styles.buttonText1 : styles.buttonText2 }>\n                    Register\n                </Text>\n            </TouchableOpacity>\n        </View>\n      <View style={styles.inputContainer}>\n        {!login && <TextInput\n          placeholder = \"Name\"\n          value = {name}\n          onChangeText = {name => setName(name)}\n          style = {styles.input}\n          />}\n          <TextInput\n          placeholder = \"Email\"\n          value = {email}\n          onChangeText = {text => setEmail(text)}\n          style = {styles.input}\n          />\n          <TextInput\n          placeholder = \"Password\"\n          value = {password}\n          onChangeText = {text => setPassword(text)}\n          style = {styles.input}\n          secureTextEntry\n          />\n        <View style={styles.checkboxContainer}>\n            {!login && <Checkbox\n                style = {{marginTop:20, marginRight: 10}}\n                disabled={false}\n                value={toggleCheckBox}\n                onValueChange={(newValue) => setToggleCheckBox(newValue)}/>}\n            {!login &&<Text style={{marginTop:20}}>Applying As A Company?</Text>}\n      </View>\n      {!login && toggleCheckBox && <TextInput\n      placeholder='Address'\n      style = {[styles.input, {marginTop:20}]}\n      value={address}\n      onChangeText={text => setAddress(text)}\n      />}\n    {/*!login && toggleCheckBox && <UploadImageBaby/>*/}    \n  \n        </View>\n      <View style={styles.buttonContainer}>\n         { login && <TouchableOpacity\n          onPress = {handleLogin}\n          style = {styles.button3} >\n              <Text style = {styles.buttonText1}>\n                  Login\n              </Text>\n          </TouchableOpacity>}\n          { !login && <TouchableOpacity\n          onPress = {handleSignUp}\n          style ={styles.button3}>\n              <Text style = {styles.buttonText1}>\n                  Register\n              </Text>\n          </TouchableOpacity>}\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default Login;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\", \n        alignItems: \"center\",\n    }\n    ,topCont:{ marginBottom:40, justifyContent:\"center\", flexDirection:\"row\", alignSelf:\"center\", width:\"60%\", backgroundColor:\"white\", borderRadius:20}\n    ,checkboxContainer:{justifyContent:\"center\", flexDirection:\"row\", alignSelf:\"center\", width:\"60%\"}\n    ,inputContainer: {width: \"80%\"}\n    ,buttonContainer: {width: \"60%\", justifyContent:\"center\", alignItems: \"center\", marginTop:40}\n    ,button2: {backgroundColor:\"white\", width:\"60%\", padding:15, borderRadius:20, alignItems:\"center\"}\n    ,button1: {backgroundColor:\"green\", width:\"60%\", padding:15, borderRadius:20, alignItems:\"center\"}\n    ,button3: {backgroundColor:\"white\",borderColor:\"green\", borderWidth:2, width:\"60%\", padding:15, borderRadius:20, alignItems:\"center\"}\n    ,input: {backgroundColor:\"white\", paddingHorizontal:15, paddingVertical:10, borderRadius:10, marginTop:5}\n    ,buttonText1: {color:\"green\", fontWeight:\"700\", fontSize:16}\n    ,buttonText2: {color:\"white\", fontWeight:\"700\", fontSize:16}\n});"]},"metadata":{},"sourceType":"module"}
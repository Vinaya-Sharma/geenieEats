{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from \"../Firebase\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Divider from 'react-native-elements/dist/divider/Divider';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { orderBy, addDoc, writeBatch, collection, collectionGroup, doc, deleteDoc, getDoc, setDoc, onSnapshot, query, where, updateDoc } from \"firebase/firestore\";\nimport Iconss from \"@expo/vector-icons/AntDesign\";\nimport Nav from \"./Nav\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Cart = function Cart(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myOrders = _useState2[0],\n      setMyOrders = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orderStuff = _useState4[0],\n      setOrderedStuff = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pastOrders = _useState6[0],\n      setPastOrders = _useState6[1];\n\n  var user = auth.currentUser.email;\n\n  var handleDeleteItem = function handleDeleteItem(item) {\n    var washingtonRef, mama;\n    return _regeneratorRuntime.async(function handleDeleteItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            washingtonRef = doc(db, \"orders\", item.id);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateDoc(washingtonRef, {\n              orderComplete: true\n            }));\n\n          case 3:\n            mama = _context.sent;\n            return _context.abrupt(\"return\", function () {\n              washingtonRef, mama;\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var ordersbaby = query(collection(db, \"orders\"), where(\"orderTo\", \"==\", user));\n    var theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", true), where(\"orderComplete\", \"==\", false));\n    var findingStuff = onSnapshot(theorders, function (snapshot) {\n      setMyOrders(snapshot.docs.map(function (posts) {\n        return _objectSpread({\n          id: posts.id\n        }, posts.data());\n      }));\n    });\n    return function () {\n      findingStuff();\n    };\n  }, [orderStuff]);\n  useEffect(function () {\n    var ordersbaby = query(collection(db, \"orders\"), where(\"orderTo\", \"==\", user));\n    var theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", true), where(\"orderComplete\", \"==\", true));\n    var findingStuff = onSnapshot(theorders, function (snapshot) {\n      setPastOrders(snapshot.docs.map(function (posts) {\n        return _objectSpread({\n          id: posts.id\n        }, posts.data());\n      }));\n    });\n    return function () {\n      findingStuff();\n    };\n  }, [orderStuff]);\n  return _jsx(View, {\n    style: {\n      backgroundColor: \"#faf5e8\",\n      height: \"100%\"\n    },\n    children: _jsxs(SafeAreaView, {\n      children: [_jsx(Nav, {\n        isCompany: false\n      }), _jsx(View, {\n        style: {\n          marginTop: 30\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"green\",\n            fontWeight: \"700\",\n            fontSize: 20,\n            width: \"100%\",\n            textAlign: \"center\"\n          },\n          children: \"Orders\"\n        })\n      }), _jsx(View, {\n        style: {\n          backgroundColor: '#eff5e6',\n          borderColor: \"#c7d4b6\",\n          borderWidth: 1,\n          borderRadius: 10,\n          padding: 20,\n          margin: 20\n        },\n        children: _jsx(ScrollView, {\n          style: {\n            width: '100%'\n          },\n          children: myOrders.length > 0 ? myOrders.map(function (item, index) {\n            return _jsxs(View, {\n              style: {\n                padding: 10\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  justifyContent: 'space-between'\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    marginTop: 10,\n                    fontSize: 15,\n                    fontWeight: 'bold'\n                  },\n                  children: item.itemName\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    marginTop: 30\n                  },\n                  children: [_jsxs(Text, {\n                    style: {\n                      marginTop: 6,\n                      alignItems: 'center',\n                      fontSize: 17,\n                      fontWeight: 'bold'\n                    },\n                    children: [\"$\", item.itemCost, \"   \"]\n                  }), _jsx(TouchableOpacity, {\n                    onPress: function onPress() {\n                      return handleDeleteItem(item);\n                    },\n                    children: _jsx(Iconss, {\n                      color: 'red',\n                      name: \"check\",\n                      size: 30\n                    })\n                  })]\n                })]\n              }), _jsx(Text, {\n                style: {\n                  fontSize: 15\n                },\n                children: item.orderFrom\n              }), _jsxs(Text, {\n                style: {\n                  marginBottom: 15\n                },\n                children: [new Date(item.timestamp.seconds * 1000).toLocaleString(), \" \"]\n              }), _jsx(Divider, {})]\n            }, index);\n          }) : _jsx(Text, {\n            style: {\n              marginLeft: 10,\n              fontSize: 15,\n              marginTop: 20,\n              alignItems: 'center'\n            },\n            children: \"No Orders Yet\"\n          })\n        })\n      }), _jsx(Text, {\n        style: {\n          color: \"green\",\n          fontWeight: \"700\",\n          fontSize: 20,\n          width: \"100%\",\n          textAlign: \"center\",\n          marginTop: 30\n        },\n        children: \"Completed Orders\"\n      }), _jsxs(View, {\n        style: {\n          backgroundColor: '#eff5e6',\n          borderColor: \"#c7d4b6\",\n          borderWidth: 1,\n          borderRadius: 10,\n          padding: 20,\n          margin: 20\n        },\n        children: [_jsx(View, {\n          style: {\n            marginTop: 30\n          }\n        }), _jsx(ScrollView, {\n          style: {\n            width: '100%'\n          },\n          children: pastOrders.length > 0 ? pastOrders.map(function (item, index) {\n            return _jsxs(View, {\n              style: {\n                padding: 10\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  justifyContent: 'space-between'\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    marginTop: 10,\n                    fontSize: 15,\n                    fontWeight: 'bold'\n                  },\n                  children: item.itemName\n                }), _jsx(View, {\n                  style: {\n                    flexDirection: 'row',\n                    marginTop: 30\n                  },\n                  children: _jsxs(Text, {\n                    style: {\n                      marginTop: 6,\n                      alignItems: 'center',\n                      fontSize: 17,\n                      fontWeight: 'bold'\n                    },\n                    children: [\"$\", item.itemCost, \"   \"]\n                  })\n                })]\n              }), _jsx(Text, {\n                style: {\n                  fontSize: 15\n                },\n                children: item.orderFrom\n              }), _jsxs(Text, {\n                style: {\n                  marginBottom: 15\n                },\n                children: [new Date(item.timestamp.seconds * 1000).toLocaleString(), \" \"]\n              }), _jsx(Divider, {})]\n            }, index);\n          }) : _jsx(Text, {\n            style: {\n              marginLeft: 10,\n              fontSize: 15,\n              marginTop: 20,\n              alignItems: 'center'\n            },\n            children: \"No Completed Orders\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default Cart;\nvar styles = StyleSheet.create({\n  button3: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    borderColor: \"green\",\n    borderWidth: 2,\n    width: \"60%\",\n    padding: 15,\n    borderRadius: 20,\n    alignItems: \"center\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonText1: {\n    color: \"green\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/krish/screens/Components/CompanyPastOrders.js"],"names":["React","useState","useEffect","auth","db","Icon","Divider","ScrollView","TouchableOpacity","orderBy","addDoc","writeBatch","collection","collectionGroup","doc","deleteDoc","getDoc","setDoc","onSnapshot","query","where","updateDoc","Iconss","Nav","Cart","navigation","myOrders","setMyOrders","orderStuff","setOrderedStuff","pastOrders","setPastOrders","user","currentUser","email","handleDeleteItem","item","washingtonRef","id","orderComplete","mama","ordersbaby","theorders","findingStuff","snapshot","docs","map","posts","data","backgroundColor","height","marginTop","color","fontWeight","fontSize","width","textAlign","borderColor","borderWidth","borderRadius","padding","margin","length","index","flexDirection","justifyContent","itemName","alignItems","itemCost","orderFrom","marginBottom","Date","timestamp","seconds","toLocaleString","marginLeft","styles","StyleSheet","create","button3","input","paddingHorizontal","paddingVertical","buttonText1"],"mappings":"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","sourcesContent":["import { View, Text, SafeAreaView, StyleSheet } from 'react-native';\nimport React, {useState, useEffect} from 'react';\nimport {auth, db} from '../Firebase'\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport Divider from 'react-native-elements/dist/divider/Divider'\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { orderBy,addDoc, writeBatch,collection, collectionGroup, doc, deleteDoc,getDoc, setDoc,onSnapshot, query, where, updateDoc } from \"firebase/firestore\"; \nimport Iconss from 'react-native-vector-icons/AntDesign';\nimport Nav from './Nav'\n\nconst Cart = ({navigation}) => {\n  const [myOrders, setMyOrders] = useState([])\n  const [orderStuff, setOrderedStuff] = useState([])\n  const [pastOrders, setPastOrders] = useState([])\n  let user = auth.currentUser.email\n\n  const handleDeleteItem = async(item) => {\n   const washingtonRef = doc(db, \"orders\", item.id);\n   let mama =  await updateDoc(washingtonRef, {\n     orderComplete: true\n   }); return () =>  {washingtonRef, mama}\n  }\n\n  useEffect(() => {\n    let ordersbaby = query(collection(db, \"orders\"), where(\"orderTo\", \"==\", user))\n    let theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", true), where(\"orderComplete\", \"==\", false))\n    let findingStuff = onSnapshot(theorders, (snapshot => {\n        setMyOrders(snapshot.docs.map(posts => ({id:posts.id, ...posts.data()})))\n    }))\n    return () => {findingStuff()}\n  }, [orderStuff]\n  )\n\n  useEffect(() => {\n    let ordersbaby = query(collection(db, \"orders\"), where(\"orderTo\", \"==\", user))\n    let theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", true), where(\"orderComplete\", \"==\", true))\n    let findingStuff = onSnapshot(theorders, (snapshot => {\n        setPastOrders(snapshot.docs.map(posts => ({id:posts.id, ...posts.data()})))\n    }))\n    return () => {findingStuff()}\n  }, [orderStuff]\n  )\n\n\n  return (\n    <View style={{backgroundColor:\"#faf5e8\", height:\"100%\"}}>\n\n    <SafeAreaView>\n       <Nav isCompany={false} />\n       <View style={{ marginTop:30}}>\n      <Text style = {{color:\"green\", fontWeight:\"700\", fontSize:20, width:\"100%\", textAlign:\"center\"}} >Orders</Text>\n      </View > \n    <View style={{backgroundColor:'#eff5e6', borderColor:\"#c7d4b6\", borderWidth:1 , borderRadius:10, padding:20, margin:20}}>\n\n      <ScrollView style={{width:'100%'}} >\n        {myOrders.length > 0 ?\n      myOrders.map((item, index) =>\n  <View style={{padding:10}} key={index} >\n    <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n    <Text style ={{marginTop:10, fontSize: 15, fontWeight:'bold'}} >{item.itemName}</Text>\n    <View style={{flexDirection:'row', marginTop:30}} >\n     <Text style ={{marginTop:6, alignItems:'center', fontSize: 17, fontWeight:'bold'}} >${item.itemCost}   </Text>\n     <TouchableOpacity onPress={() => handleDeleteItem(item)}>\n     <Iconss color={'red'} name='check' size={30}/>\n   </TouchableOpacity>\n     </View>\n    </View>\n    <Text style ={{fontSize: 15}} >{item.orderFrom}</Text>\n    <Text style={{marginBottom:15}} >{(new Date(item.timestamp.seconds*1000).toLocaleString())} </Text>\n    <Divider/>\n  </View>\n  ): <Text style = {{marginLeft: 10, fontSize:15, marginTop:20, alignItems:'center'}} >{`No Orders Yet`}</Text>}\n      </ScrollView>\n      </View>\n\n      <Text style = {{color:\"green\", fontWeight:\"700\", fontSize:20, width:\"100%\", textAlign:\"center\", marginTop:30}} >Completed Orders</Text>\n      <View style={{backgroundColor:'#eff5e6', borderColor:\"#c7d4b6\", borderWidth:1 , borderRadius:10, padding:20, margin:20}}>\n\n      <View style={{ marginTop:30}}>\n\n      </View > \n<ScrollView style={{width:'100%'}} >\n  {pastOrders.length > 0 ?\npastOrders.map((item, index) =>\n<View style={{padding:10}} key={index} >\n<View style={{flexDirection:'row', justifyContent:'space-between'}}>\n<Text style ={{marginTop:10, fontSize: 15, fontWeight:'bold'}} >{item.itemName}</Text>\n<View style={{flexDirection:'row', marginTop:30}} >\n<Text style ={{marginTop:6, alignItems:'center', fontSize: 17, fontWeight:'bold'}} >${item.itemCost}   </Text>\n</View>\n</View>\n<Text style ={{fontSize: 15}} >{item.orderFrom}</Text>\n<Text style={{marginBottom:15}} >{(new Date(item.timestamp.seconds*1000).toLocaleString())} </Text>\n<Divider/>\n</View>\n): <Text style = {{marginLeft: 10, fontSize:15, marginTop:20, alignItems:'center'}} >{`No Completed Orders`}</Text>}\n</ScrollView>\n</View>\n\n\n    </SafeAreaView>\n    </View>\n  );\n};\n\nexport default Cart;\n\nconst styles = StyleSheet.create({\nbutton3: {marginTop:20, backgroundColor:\"white\",borderColor:\"green\", borderWidth:2, width:\"60%\", padding:15, borderRadius:20, alignItems:\"center\"}\n,input: {backgroundColor:\"white\", paddingHorizontal:15, paddingVertical:10, borderRadius:10, marginTop:5}\n    ,buttonText1: {color:\"green\", fontWeight:\"700\", fontSize:16}\n    \n})"]},"metadata":{},"sourceType":"module"}
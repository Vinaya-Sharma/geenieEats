{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from \"../Firebase\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Divider from 'react-native-elements/dist/divider/Divider';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { addDoc, writeBatch, collection, collectionGroup, doc, deleteDoc, getDoc, setDoc, onSnapshot, query, where, updateDoc, orderBy } from \"firebase/firestore\";\nimport Iconss from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Cart = function Cart(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myOrders = _useState2[0],\n      setMyOrders = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orderStuff = _useState4[0],\n      setOrderedStuff = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pastOrders = _useState6[0],\n      setPastOrders = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stuff = _useState8[0],\n      setStuff = _useState8[1];\n\n  var user = auth.currentUser.email;\n\n  var handleDeleteItem = function handleDeleteItem(item) {\n    var stuff;\n    return _regeneratorRuntime.async(function handleDeleteItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(deleteDoc(doc(db, \"orders\", item.id)));\n\n          case 2:\n            stuff = _context.sent;\n            return _context.abrupt(\"return\", function () {\n              stuff;\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var ordersbaby = query(collection(db, \"orders\"), where(\"orderFrom\", \"==\", user));\n    var theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", false));\n    var findingStuff = onSnapshot(theorders, function (snapshot) {\n      setMyOrders(snapshot.docs.map(function (posts) {\n        return _objectSpread({\n          id: posts.id\n        }, posts.data());\n      }));\n    });\n    return function () {\n      findingStuff();\n    };\n  }, [orderStuff]);\n  useEffect(function () {\n    var ordersbaby = query(collection(db, \"orders\"), where(\"orderFrom\", \"==\", user));\n    var theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", true), orderBy(\"timestamp\", \"desc\"));\n    var findingStuff = onSnapshot(theorders, function (snapshot) {\n      setPastOrders(snapshot.docs.map(function (posts) {\n        return _objectSpread({\n          id: posts.id\n        }, posts.data());\n      }));\n    });\n    return function () {\n      findingStuff();\n    };\n  }, []);\n\n  var placeOrder = function placeOrder() {\n    var ordersbaby = query(collection(db, \"orders\"), where(\"orderFrom\", \"==\", user));\n    var theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", false));\n    var theOrder = onSnapshot(theorders, function (snapshot) {\n      setOrderedStuff(snapshot.docs.map(function (posts) {\n        return {\n          id: posts.id\n        };\n      }));\n    });\n    stuff ? Alert.alert('Click the \"place all orders\" button to confirm your order.') : null;\n    setStuff(!stuff);\n    var letsdoStuff = orderStuff.map(function _callee(id) {\n      var washingtonRef, mama;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              washingtonRef = doc(db, \"orders\", id.id);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(updateDoc(washingtonRef, {\n                orderPlaced: true,\n                timestamp: new Date()\n              }));\n\n            case 3:\n              mama = _context2.sent;\n              return _context2.abrupt(\"return\", function () {\n                mama;\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    return function () {\n      theOrder();\n    };\n  };\n\n  return _jsx(View, {\n    style: {\n      backgroundColor: \"#faf5e8\",\n      height: \"100%\"\n    },\n    children: _jsxs(SafeAreaView, {\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 50,\n          marginBottom: 30\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Icon, {\n            name: \"ios-arrow-back\",\n            size: 30\n          })\n        }), _jsx(Text, {\n          style: {\n            width: \"92%\",\n            textAlign: 'center',\n            color: \"green\",\n            fontWeight: \"700\",\n            fontSize: 20\n          },\n          children: \"Your Cart\"\n        })]\n      }), _jsx(View, {\n        style: {\n          alignItems: 'center'\n        },\n        children: _jsxs(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          style: {\n            width: '84%'\n          },\n          children: [_jsxs(View, {\n            style: {\n              backgroundColor: '#eff5e6',\n              borderColor: \"#c7d4b6\",\n              borderWidth: 1,\n              borderRadius: 10,\n              padding: 20\n            },\n            children: [myOrders.length > 0 ? myOrders.map(function (item, index) {\n              return _jsxs(View, {\n                style: {\n                  padding: 10\n                },\n                children: [_jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    paddingVertical: 10\n                  },\n                  children: [_jsx(Text, {\n                    style: {\n                      fontSize: 15,\n                      fontWeight: 'bold'\n                    },\n                    children: item.itemName\n                  }), _jsxs(View, {\n                    style: {\n                      flexDirection: 'row',\n                      justifyContent: 'center',\n                      alignItems: 'center'\n                    },\n                    children: [_jsxs(Text, {\n                      style: {\n                        alignItems: 'center',\n                        fontSize: 17,\n                        fontWeight: 'bold'\n                      },\n                      children: [\"$\", item.itemCost, \"   \"]\n                    }), _jsx(TouchableOpacity, {\n                      onPress: function onPress() {\n                        return handleDeleteItem(item);\n                      },\n                      children: _jsx(Text, {\n                        style: {\n                          fontSize: 10\n                        },\n                        children: \"\\u274C\"\n                      })\n                    })]\n                  })]\n                }), _jsx(Text, {\n                  style: {\n                    fontSize: 15,\n                    marginBottom: 15\n                  },\n                  children: item.address\n                }), _jsx(Divider, {})]\n              }, index);\n            }) : _jsx(Text, {\n              style: {\n                marginLeft: 10,\n                fontSize: 15,\n                marginTop: 20,\n                alignItems: 'center'\n              },\n              children: \"Nothing in your cart yet... \\nTreat yourself with a meal from Geenie Eats\"\n            }), myOrders.length > 0 && _jsx(View, {\n              style: {\n                alignItems: 'center'\n              },\n              children: _jsx(TouchableOpacity, {\n                onPress: placeOrder,\n                style: [styles.button3, {\n                  backgroundColor: \"#fdfffa\"\n                }],\n                children: _jsx(Text, {\n                  style: styles.buttonText1,\n                  children: \"Place All Orders\"\n                })\n              })\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(View, {\n              style: {\n                alignItems: 'center',\n                marginTop: 70\n              },\n              children: pastOrders.length > 0 && _jsx(Text, {\n                style: {\n                  color: \"green\",\n                  fontWeight: \"700\",\n                  fontSize: 20\n                },\n                children: \"Past Orders\"\n              })\n            }), pastOrders.length > 0 && _jsx(View, {\n              style: {\n                backgroundColor: '#eff5e6',\n                borderColor: \"#c7d4b6\",\n                borderWidth: 1,\n                borderRadius: 10,\n                padding: 20,\n                marginVertical: 30\n              },\n              children: pastOrders.length > 0 && pastOrders.map(function (item, index) {\n                return _jsxs(View, {\n                  style: {\n                    padding: 10\n                  },\n                  children: [_jsxs(View, {\n                    style: {\n                      flexDirection: 'row',\n                      justifyContent: 'space-between'\n                    },\n                    children: [_jsx(Text, {\n                      style: {\n                        marginTop: 20,\n                        fontSize: 15,\n                        fontWeight: 'bold'\n                      },\n                      children: item.itemName\n                    }), _jsx(View, {\n                      style: {\n                        flexDirection: 'row',\n                        marginTop: 30\n                      },\n                      children: _jsxs(Text, {\n                        style: {\n                          marginTop: 6,\n                          alignItems: 'center',\n                          fontSize: 17,\n                          fontWeight: 'bold'\n                        },\n                        children: [\"$\", item.itemCost, \"   \"]\n                      })\n                    })]\n                  }), _jsx(Text, {\n                    style: {\n                      fontSize: 15\n                    },\n                    children: item.address\n                  }), new Date((item.timestamp.seconds + item.prepTime * 60) * 1000) > new Date() ? _jsx(Text, {\n                    style: {\n                      marginBottom: 15,\n                      fontSize: 14,\n                      fontWeight: 'bold',\n                      color: \"green\"\n                    },\n                    children: \"Approximatley ready by: \" + new Date((item.timestamp.seconds + item.prepTime * 60) * 1000).toLocaleString().slice(11)\n                  }) : _jsx(Text, {\n                    style: {\n                      marginBottom: 15,\n                      fontSize: 15,\n                      fontWeight: 'bold'\n                    },\n                    children: \"Order Is Complete\"\n                  }), _jsx(Divider, {})]\n                }, index);\n              })\n            })]\n          })]\n        })\n      })]\n    })\n  });\n};\n\nexport default Cart;\nvar styles = StyleSheet.create({\n  button3: {\n    marginTop: 20,\n    backgroundColor: \"white\",\n    borderColor: \"green\",\n    borderWidth: 2,\n    width: \"60%\",\n    padding: 15,\n    borderRadius: 20,\n    alignItems: \"center\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonText1: {\n    color: \"green\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/krish/screens/Components/Cart.js"],"names":["React","useState","useEffect","auth","db","Icon","Divider","ScrollView","TouchableOpacity","addDoc","writeBatch","collection","collectionGroup","doc","deleteDoc","getDoc","setDoc","onSnapshot","query","where","updateDoc","orderBy","Iconss","Cart","navigation","myOrders","setMyOrders","orderStuff","setOrderedStuff","pastOrders","setPastOrders","stuff","setStuff","user","currentUser","email","handleDeleteItem","item","id","ordersbaby","theorders","findingStuff","snapshot","docs","map","posts","data","placeOrder","theOrder","Alert","alert","letsdoStuff","washingtonRef","orderPlaced","timestamp","Date","mama","backgroundColor","height","flexDirection","marginTop","marginBottom","goBack","width","textAlign","color","fontWeight","fontSize","alignItems","borderColor","borderWidth","borderRadius","padding","length","index","justifyContent","paddingVertical","itemName","itemCost","address","marginLeft","styles","button3","buttonText1","marginVertical","seconds","prepTime","toLocaleString","slice","StyleSheet","create","input","paddingHorizontal"],"mappings":"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","sourcesContent":["import { View, Text, SafeAreaView, StyleSheet, Alert } from 'react-native';\nimport React, {useState, useEffect} from 'react';\nimport {auth, db} from '../Firebase'\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport Divider from 'react-native-elements/dist/divider/Divider'\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { addDoc, writeBatch,collection, collectionGroup, doc, deleteDoc,getDoc, setDoc,onSnapshot, query, where, updateDoc, orderBy } from \"firebase/firestore\"; \nimport Iconss from 'react-native-vector-icons/AntDesign';\n\nconst Cart = ({navigation}) => {\n  const [myOrders, setMyOrders] = useState([])\n  const [orderStuff, setOrderedStuff] = useState([])\n  const [pastOrders, setPastOrders] = useState([])\n  const [stuff, setStuff] = useState(true)\n  let user = auth.currentUser.email\n\n  const handleDeleteItem = async(item) => {\n    const stuff = await deleteDoc(doc(db, \"orders\", item.id));\n    return () => {stuff}\n  }\n\n  useEffect(() => {\n    let ordersbaby = query(collection(db, \"orders\"), where(\"orderFrom\", \"==\", user))\n    let theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", false))\n    let findingStuff = onSnapshot(theorders, (snapshot => {\n        setMyOrders(snapshot.docs.map(posts => ({id:posts.id, ...posts.data()})))\n    }))\n    return () => {findingStuff()}\n  }, [orderStuff]\n  )\n\n  useEffect(() => {\n    let ordersbaby = query(collection(db, \"orders\"), where(\"orderFrom\", \"==\", user))\n    let theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", true), orderBy(\"timestamp\", \"desc\"))\n    let findingStuff = onSnapshot(theorders, (snapshot => {\n        setPastOrders(snapshot.docs.map(posts => ({id:posts.id, ...posts.data()})))\n    }))\n    return () => {findingStuff()}\n  }, []\n  )\n\n  const placeOrder = () =>{\n\n    let ordersbaby = query(collection(db, \"orders\"), where(\"orderFrom\", \"==\", user))\n    let theorders = query(ordersbaby, where(\"orderPlaced\", \"==\", false))\n    let theOrder = onSnapshot(theorders, (snapshot => {\n      setOrderedStuff(snapshot.docs.map(posts => ({id:posts.id})))}))\n\n      stuff? Alert.alert('Click the \"place all orders\" button to confirm your order.'): null\n      setStuff(!stuff)\n  \n      const letsdoStuff = orderStuff.map( async(id) => {\n      const washingtonRef = doc(db, \"orders\", id.id);\n      let mama =  await updateDoc(washingtonRef, {\n        orderPlaced: true,\n        timestamp: new Date()\n      }); return () =>  {mama}\n      })\n      return () => {theOrder()}\n      }\n\n  return (\n    <View style={{backgroundColor:\"#faf5e8\", height:\"100%\"}}>\n       <SafeAreaView >\n      <View style={{ flexDirection:'row',marginTop:50, marginBottom:30}}>\n       <TouchableOpacity onPress={() => navigation.goBack()}  >\n         <Icon name='ios-arrow-back' size={30} />\n       </TouchableOpacity>\n       <Text style = {{width:\"92%\", textAlign:'center',color:\"green\", fontWeight:\"700\", fontSize:20}} >Your Cart</Text>\n             </View>\n\n    <View style = {{alignItems:'center'}}>\n\n      <ScrollView showsVerticalScrollIndicator={false} style={{width:'84%'}} >\n        <View style={{backgroundColor:'#eff5e6', borderColor:\"#c7d4b6\", borderWidth:1 , borderRadius:10, padding:20}} >\n        {myOrders.length > 0 ?\n      myOrders.map((item, index) =>\n  <View style={{padding:10}} key={index} >\n    <View style={{flexDirection:'row', justifyContent:'space-between', paddingVertical:10}}>\n    <Text style ={{fontSize: 15, fontWeight:'bold'}} >{item.itemName}</Text>\n    <View style={{flexDirection:'row', justifyContent:'center', alignItems:'center'}} >\n     <Text style ={{ alignItems:'center', fontSize: 17, fontWeight:'bold'}} >${item.itemCost}   </Text>\n     <TouchableOpacity onPress={() => handleDeleteItem(item)}>\n    <Text style={{fontSize:10}} >❌</Text>\n   </TouchableOpacity>\n     </View>\n    </View>\n    <Text style ={{fontSize: 15, marginBottom:15}} >{item.address}</Text>\n    <Divider/>\n  </View>\n  ): <Text style = {{marginLeft: 10, fontSize:15, marginTop:20, alignItems:'center'}} >{`Nothing in your cart yet... \\nTreat yourself with a meal from Geenie Eats`}</Text>}\n\n     {myOrders.length>0 && <View style={{alignItems:'center'}}>\n      <TouchableOpacity onPress = {placeOrder}\n          style ={[styles.button3, {backgroundColor:\"#fdfffa\"}]}>\n              <Text style = {styles.buttonText1}>\n                  Place All Orders\n              </Text>\n          </TouchableOpacity>\n       </View>}\n       </View>\n\n       <View>\n          <View style={{alignItems:'center', marginTop:70}} >\n          {pastOrders.length>0 && <Text style = {{color:\"green\", fontWeight:\"700\", fontSize:20}}>Past Orders</Text>}\n          </View>\n\n          {pastOrders.length > 0 && \n          <View style={{backgroundColor:'#eff5e6', borderColor:\"#c7d4b6\", borderWidth:1 , borderRadius:10, padding:20, marginVertical:30}} >\n          {pastOrders.length>0 &&\n      pastOrders.map((item, index) =>\n  <View style={{padding:10}} key={index} >\n    <View style={{flexDirection:'row', justifyContent:'space-between'}}>\n    <Text style ={{marginTop:20, fontSize: 15, fontWeight:'bold'}} >{item.itemName}</Text>\n    <View style={{flexDirection:'row', marginTop:30}} >\n     <Text style ={{marginTop:6, alignItems:'center', fontSize: 17, fontWeight:'bold'}} >${item.itemCost}   </Text>\n     </View>\n    </View>\n    <Text style ={{fontSize: 15}} >{item.address}</Text>\n    {/*<Text>{new Date((item.timestamp.seconds+ (item.prepTime*60))* 1000).toLocaleString()}</Text>*/}\n   {new Date((item.timestamp.seconds+ (item.prepTime*60))* 1000) > new Date()?  <Text style={{marginBottom:15, fontSize:14, fontWeight:'bold', color:\"green\"}} >{\"Approximatley ready by: \" +new Date((item.timestamp.seconds+ (item.prepTime*60))* 1000).toLocaleString().slice(11)}</Text>:  <Text style={{marginBottom:15, fontSize:15, fontWeight:'bold'}}>Order Is Complete</Text>}\n    {/* new Date().getTime() < new Date(item.orderCompleteAt).getTime()? <Text>the food is ready</Text> : <Text>the food is not ready</Text>*/}\n    {/*<Text style={{marginBottom:15}} >{(new Date(item.timestamp.seconds*1000).toLocaleString())} </Text>*/}\n    <Divider/>\n  </View>\n  )}\n    </View>\n          }\n          \n          </View>\n\n      </ScrollView>\n      </View>\n    </SafeAreaView>\n    </View>\n   \n  );\n};\n\nexport default Cart;\n\nconst styles = StyleSheet.create({\nbutton3: {marginTop:20, backgroundColor:\"white\",borderColor:\"green\", borderWidth:2, width:\"60%\", padding:15, borderRadius:20, alignItems:\"center\"}\n,input: {backgroundColor:\"white\", paddingHorizontal:15, paddingVertical:10, borderRadius:10, marginTop:5}\n    ,buttonText1: {color:\"green\", fontWeight:\"700\", fontSize:16}\n    \n})"]},"metadata":{},"sourceType":"module"}
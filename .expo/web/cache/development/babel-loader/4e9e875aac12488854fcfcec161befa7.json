{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from \"./Firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { collection, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { SignedInStack, SignedOutStack, CompanyStack } from \"./Navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCompany = _useState2[0],\n      setIsCompany = _useState2[1];\n\n  var user;\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currrentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var userHandle = function userHandle(user) {\n    return user ? setCurrentUser(user) : setCurrentUser(null);\n  };\n\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      return userHandle(user);\n    });\n  }, []);\n\n  var check = function check() {\n    var dbRef, theUser, docRef, docSnap;\n    return _regeneratorRuntime.async(function check$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dbRef = collection(db, \"users\");\n            theUser = currrentUser ? auth.currentUser.email[0].toUpperCase() + auth.currentUser.email.substring(1) : null;\n            docRef = currrentUser ? doc(dbRef, theUser) : null;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(getDoc(docRef));\n\n          case 5:\n            docSnap = _context.sent;\n\n            if (docSnap.exists()) {\n              setIsCompany(false);\n            } else {\n              setIsCompany(true);\n            }\n\n            return _context.abrupt(\"return\", function () {\n              check, dbRef, docRef, docSnap;\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  check();\n\n  if (!isCompany && currrentUser) {\n    return _jsx(SignedInStack, {});\n  } else if (currrentUser) {\n    return _jsx(CompanyStack, {});\n  } else {\n    return _jsx(SignedOutStack, {});\n  }\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttom: {\n    marginTop: 40,\n    backgroundColor: \"green\",\n    width: \"60%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/krish/screens/Home.js"],"names":["React","useState","useEffect","auth","db","onAuthStateChanged","collection","doc","getDoc","onSnapshot","SignedInStack","SignedOutStack","CompanyStack","Home","navigation","isCompany","setIsCompany","user","currrentUser","setCurrentUser","userHandle","check","dbRef","theUser","currentUser","email","toUpperCase","substring","docRef","docSnap","exists","styles","StyleSheet","create","container","flex","justifyContent","alignItems","buttom","marginTop","backgroundColor","width","padding","borderRadius","buttonText","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport {auth, db} from './Firebase'\nimport {onAuthStateChanged } from \"firebase/auth\";\nimport { collection, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { SignedInStack, SignedOutStack, CompanyStack } from './Navigation';\n\nconst Home = ({navigation}) => {\n  const [isCompany, setIsCompany] = useState(false)\n  let user;\n  const [currrentUser, setCurrentUser] = useState(null)\n  const userHandle = user => user? setCurrentUser(user): setCurrentUser(null)\n  \n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => userHandle(user))}, [])\n\n\n  const check = async() =>{\n    const dbRef = collection(db, \"users\")\n    let theUser = currrentUser? auth.currentUser.email[0].toUpperCase() + auth.currentUser.email.substring(1): null\n    const docRef =  currrentUser? doc(dbRef, theUser): null\n    const docSnap =  await getDoc(docRef)\n    \n  if (docSnap.exists()) {\n  setIsCompany(false)\n  } else {\n  setIsCompany(true)\n  }\n  return () => {check, dbRef, docRef, docSnap}\n  }\n\n  check()\n\n  if (!isCompany && currrentUser ){\n    return <SignedInStack/>\n  } else if(currrentUser)  {\n    return <CompanyStack/>\n  } else{\n    return  <SignedOutStack/>\n  }\n};\n\nexport default Home;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1, \n    justifyContent: \"center\", \n    alignItems:\"center\"\n  }, \n  buttom:{\n    marginTop:40,\n    backgroundColor:\"green\", \n    width:\"60%\", \n    padding:15, \n    borderRadius:10, \n    alignItems: \"center\"\n  },\n  buttonText:{\n    color:\"white\", \n    fontWeight:\"700\",\n    fontSize:16\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./Login\";\nimport Home from \"./Home\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./Firebase\";\nimport React, { useState, useEffect } from 'react';\nimport RestaurantPage from \"./Components/RestaurantPage\";\nimport HomePosts from \"./Components/HomePosts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar ScreenOptions = {\n  headerShown: false\n};\n\nvar SignedOutStack = function SignedOutStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      screenOptions: ScreenOptions,\n      children: _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login\n      })\n    })\n  });\n};\n\nvar SignedInStack = function SignedInStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"HomePosts\",\n      screenOptions: ScreenOptions,\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"HomePosts\",\n        component: HomePosts\n      }), _jsx(Stack.Screen, {\n        name: \"RestaurantPage\",\n        component: RestaurantPage\n      })]\n    })\n  });\n};\n\nvar Navigation = function Navigation() {\n  var user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currrentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var userHandle = function userHandle(user) {\n    return user ? setCurrentUser(user) : setCurrentUser(null);\n  };\n\n  useEffect(function () {\n    return onAuthStateChanged(auth, function (user) {\n      return userHandle(user);\n    });\n  }, []);\n  {\n    if (currrentUser) {\n      return _jsx(SignedInStack, {});\n    } else {\n      return _jsx(SignedOutStack, {});\n    }\n  }\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/krish/screens/Navigation.js"],"names":["NavigationContainer","createStackNavigator","Login","Home","onAuthStateChanged","auth","React","useState","useEffect","RestaurantPage","HomePosts","Stack","ScreenOptions","headerShown","SignedOutStack","SignedInStack","Navigation","user","currrentUser","setCurrentUser","userHandle"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,SAAQC,kBAAR,QAAkC,eAAlC;AACA,SAAQC,IAAR;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA2C,OAA3C;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;;;AAEA,IAAMC,KAAK,GAAGV,oBAAoB,EAAlC;AACA,IAAMW,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAtB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAE,SAC3B,KAAC,mBAAD;AAAA,cACI,KAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,OAAlC;AAA0C,MAAA,aAAa,EAAEF,aAAzD;AAAA,gBACI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,OAArB;AAA6B,QAAA,SAAS,EAAEV;AAAxC;AADJ;AADJ,IAD2B;AAM7B,CANF;;AAQA,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAE,SAC5B,KAAC,mBAAD;AAAA,cACI,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,WAAlC;AAA8C,MAAA,aAAa,EAAEH,aAA7D;AAAA,iBACI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,MAArB;AAA4B,QAAA,SAAS,EAAET;AAAvC,QADJ,EAEI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,WAArB;AAAiC,QAAA,SAAS,EAAEO;AAA5C,QAFJ,EAGI,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,gBAArB;AAAsC,QAAA,SAAS,EAAED;AAAjD,QAHJ;AAAA;AADJ,IAD4B;AAQ5B,CARF;;AAUA,IAAMO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAIC,IAAJ;;AAEA,kBAAuCV,QAAQ,CAAC,IAAD,CAA/C;AAAA;AAAA,MAAOW,YAAP;AAAA,MAAqBC,cAArB;;AAEE,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAH,IAAI;AAAA,WAAIA,IAAI,GAAEE,cAAc,CAACF,IAAD,CAAhB,GAAwBE,cAAc,CAAC,IAAD,CAA9C;AAAA,GAAvB;;AAEAX,EAAAA,SAAS,CAAC;AAAA,WAAMJ,kBAAkB,CAACC,IAAD,EAAO,UAACY,IAAD;AAAA,aAAUG,UAAU,CAACH,IAAD,CAApB;AAAA,KAAP,CAAxB;AAAA,GAAD,EAA6D,EAA7D,CAAT;AAEA;AAAE,QAAIC,YAAJ,EAAiB;AACjB,aAAO,KAAC,aAAD,KAAP;AACD,KAFC,MAEK;AACL,aAAO,KAAC,cAAD,KAAP;AACD;AACA;AACN,CAfD;;AAiBA,eAAeF,UAAf","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./Login\"\nimport Home from './Home'\nimport {onAuthStateChanged } from \"firebase/auth\";\nimport {auth} from './Firebase'\nimport React, {useState, useEffect }  from 'react';\nimport RestaurantPage from './Components/RestaurantPage'\nimport HomePosts from './Components/HomePosts';\n\nconst Stack = createStackNavigator()\nconst ScreenOptions = {\n    headerShown: false \n}\n\nconst SignedOutStack = () => { return(\n    <NavigationContainer>\n        <Stack.Navigator initialRouteName='Login' screenOptions={ScreenOptions} > \n            <Stack.Screen name = 'Login' component={Login}/>\n        </Stack.Navigator>\n    </NavigationContainer>\n)}\n\nconst SignedInStack = () => { return(\n  <NavigationContainer>\n      <Stack.Navigator initialRouteName='HomePosts' screenOptions={ScreenOptions} > \n          <Stack.Screen name = 'Home' component={Home}/>\n          <Stack.Screen name = 'HomePosts' component={HomePosts}/>\n          <Stack.Screen name = 'RestaurantPage' component={RestaurantPage}/>\n      </Stack.Navigator>\n  </NavigationContainer>\n)}\n\nconst Navigation = () => {\n    let user;\n  \n    const [currrentUser, setCurrentUser] = useState(null)\n  \n      const userHandle = user => user? setCurrentUser(user): setCurrentUser(null)\n  \n      useEffect(() => onAuthStateChanged(auth, (user) => userHandle(user)), [])\n    \n      { if (currrentUser){\n        return <SignedInStack/> \n      } else {\n        return <SignedOutStack/>\n      }\n      } \n};\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from 'react';\nimport Nav from \"./Nav\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { addDoc, collection, collectionGroup, doc, deleteDoc, getDoc, setDoc, onSnapshot, query, where } from \"firebase/firestore\";\nimport { db, auth } from \"../Firebase\";\nimport Divider from 'react-native-elements/dist/divider/Divider';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Icons from \"@expo/vector-icons/FontAwesome5\";\nimport Iconss from \"@expo/vector-icons/AntDesign\";\nimport { EditStack } from \"../Navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CompanyAddItemPage = function CompanyAddItemPage(_ref) {\n  var edit = _ref.edit,\n      setEdit = _ref.setEdit;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemName = _useState2[0],\n      setItemName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemCost = _useState4[0],\n      setItemCost = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      itemPrep = _useState6[0],\n      setItemPrep = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      itemDescription = _useState8[0],\n      setItemDescription = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      myCompany = _useState10[0],\n      setMyCompany = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n\n  var company = auth.currentUser;\n  var companyUpperEmail = company.email[0].toUpperCase() + company.email.substring(1);\n  useEffect(function () {\n    var theCompany = query(collection(db, \"companies\"), where(\"email\", \"==\", companyUpperEmail));\n    onSnapshot(theCompany, function (snapshot) {\n      setMyCompany(snapshot.docs.map(function (posts) {\n        return _objectSpread({\n          id: posts.id\n        }, posts.data());\n      }));\n    });\n    return function () {\n      theCompany;\n    };\n  }, []);\n  useEffect(function () {\n    var theItems = query(collection(db, \"items\"), where(\"company\", \"==\", company.email));\n    onSnapshot(theItems, function (snapshot) {\n      setItems(snapshot.docs.map(function (posts) {\n        return _objectSpread({\n          id: posts.id\n        }, posts.data());\n      }));\n    });\n    return function () {\n      theItems;\n    };\n  }, []);\n\n  var handleAdd = function handleAdd() {\n    var letsAddDoc;\n    return _regeneratorRuntime.async(function handleAdd$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, 'items'), {\n              company: company.email,\n              address: myCompany[0].address,\n              itemName: itemName,\n              itemDescription: itemDescription,\n              itemCost: itemCost,\n              itemPrep: itemPrep ? parseInt(itemPrep) : 0\n            }));\n\n          case 2:\n            letsAddDoc = _context.sent;\n            setItemCost('');\n            setItemName('');\n            setItemDescription('');\n            setItemPrep();\n            return _context.abrupt(\"return\", function () {\n              letsAddDoc;\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Nav, {\n      isCompany: false\n    }), _jsx(KeyboardAvoidingView, {\n      style: {\n        marginHorizontal: 20,\n        marginTop: 30\n      },\n      children: _jsxs(View, {\n        style: {\n          alignItems: 'center',\n          backgroundColor: '#eff5e6',\n          borderColor: \"#c7d4b6\",\n          borderWidth: 1,\n          borderRadius: 10,\n          padding: 20\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: 'green',\n            fontSize: 18,\n            fontWeight: '700',\n            marginVertical: 20\n          },\n          children: \"Add More Items To Your Profile!\"\n        }), _jsx(TextInput, {\n          placeholder: \"Item Name\",\n          value: itemName,\n          onChangeText: function onChangeText(name) {\n            return setItemName(name);\n          },\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Item Description\",\n          value: itemDescription,\n          onChangeText: function onChangeText(text) {\n            return setItemDescription(text);\n          },\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Item Cost\",\n          value: itemCost,\n          onChangeText: function onChangeText(text) {\n            return setItemCost(text);\n          },\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Estimated Preptime (minutes)\",\n          value: itemPrep,\n          onChangeText: function onChangeText(text) {\n            return setItemPrep(text);\n          },\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          onPress: handleAdd,\n          style: styles.button3,\n          children: _jsx(Text, {\n            style: styles.buttonText1,\n            children: \"Add Item\"\n          })\n        }), _jsx(Divider, {})]\n      })\n    })]\n  });\n};\n\nexport default CompanyAddItemPage;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button3: {\n    backgroundColor: \"white\",\n    borderColor: \"green\",\n    borderWidth: 2,\n    width: 200,\n    padding: 15,\n    borderRadius: 20,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  buttonText1: {\n    color: \"green\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  input: {\n    backgroundColor: \"white\",\n    width: '80%',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginVertical: 8\n  }\n});","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/krish/screens/Components/AddItemPage.js"],"names":["React","useState","useEffect","Nav","SafeAreaView","ScrollView","TouchableOpacity","addDoc","collection","collectionGroup","doc","deleteDoc","getDoc","setDoc","onSnapshot","query","where","db","auth","Divider","Icon","Icons","Iconss","EditStack","CompanyAddItemPage","edit","setEdit","itemName","setItemName","itemCost","setItemCost","itemPrep","setItemPrep","itemDescription","setItemDescription","myCompany","setMyCompany","items","setItems","company","currentUser","companyUpperEmail","email","toUpperCase","substring","theCompany","snapshot","docs","map","posts","id","data","theItems","handleAdd","address","parseInt","letsAddDoc","marginHorizontal","marginTop","alignItems","backgroundColor","borderColor","borderWidth","borderRadius","padding","color","fontSize","fontWeight","marginVertical","name","styles","input","text","button3","buttonText1","StyleSheet","create","container","flex","justifyContent","width","paddingHorizontal","paddingVertical"],"mappings":"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","sourcesContent":["import { View, Text, StyleSheet, TextInput, Image } from 'react-native';\nimport React, {useState, useEffect} from 'react';\nimport Nav from './Nav'\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { KeyboardAvoidingView } from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { addDoc, collection, collectionGroup, doc, deleteDoc,getDoc, setDoc,onSnapshot, query, where } from \"firebase/firestore\"; \nimport {db, auth} from \"../Firebase\"\nimport Divider from 'react-native-elements/dist/divider/Divider'\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport Icons from 'react-native-vector-icons/FontAwesome5';\nimport Iconss from 'react-native-vector-icons/AntDesign';\nimport { EditStack } from '../Navigation';\n\nconst CompanyAddItemPage = ({edit,setEdit}) => {\n  const [itemName, setItemName] = useState('')\n  const [itemCost, setItemCost] = useState('')\n  const [itemPrep, setItemPrep] = useState()\n  const [itemDescription, setItemDescription] = useState('')\n  const [myCompany, setMyCompany] = useState([])\n  const [items, setItems] = useState([])\n  let company = auth.currentUser\n\n  let companyUpperEmail = company.email[0].toUpperCase() + company.email.substring(1)\n\n  useEffect(() => {\n    let theCompany = query(collection(db, \"companies\"), where(\"email\", \"==\", companyUpperEmail))\n    onSnapshot(theCompany, (snapshot => {\n        setMyCompany(snapshot.docs.map(posts => ({id:posts.id, ...posts.data()})))\n    }))\n    return () => {theCompany}\n  }, []\n  )\n  \n  useEffect( () => {\n    let theItems =  query (collection(db, \"items\"), where(\"company\", \"==\", company.email))\n     onSnapshot(theItems, (snapshot => { \n         setItems (snapshot.docs.map(posts => ({id:posts.id, ...posts.data()})))\n    }))\n    return () => {theItems}\n  }, []\n  )\n\n  const handleAdd = async () => {\n      const letsAddDoc = await addDoc(collection(db, 'items'), {\n        company: company.email,\n        address: myCompany[0].address,\n        itemName: itemName,\n        itemDescription: itemDescription,\n        itemCost: itemCost,\n        itemPrep: itemPrep? parseInt(itemPrep): 0\n    })\n    setItemCost('')\n    setItemName('')\n    setItemDescription('')\n    setItemPrep()\n    return () => {letsAddDoc}\n  }\n\n  return (\n    <View >\n      <Nav isCompany={false} />\n      <KeyboardAvoidingView style={{marginHorizontal:20, marginTop:30}}>\n        <View style={{alignItems:'center',backgroundColor:'#eff5e6', borderColor:\"#c7d4b6\", borderWidth:1 , borderRadius:10, padding:20}} >\n        <Text style={{color:'green', fontSize:18, fontWeight:'700', marginVertical:20}} >Add More Items To Your Profile!</Text>\n      <TextInput\n          placeholder = \"Item Name\"\n          value = {itemName}\n          onChangeText = {name => setItemName(name)}\n          style = {styles.input}\n          />\n          <TextInput\n          placeholder = \"Item Description\"\n          value = {itemDescription}\n          onChangeText = {text => setItemDescription(text)}\n          style = {styles.input}\n          />\n          <TextInput\n          placeholder = \"Item Cost\"\n          value = {itemCost}\n          onChangeText = {text => setItemCost(text)}\n          style = {styles.input}\n          />\n          <TextInput\n          placeholder = \"Estimated Preptime (minutes)\"\n          value = {itemPrep}\n          onChangeText = {text => setItemPrep(text)}\n          style = {styles.input}\n          />\n               <TouchableOpacity\n               onPress={handleAdd}\n          style = {styles.button3} >\n              <Text style = {styles.buttonText1}>\n                  Add Item\n              </Text>\n          </TouchableOpacity>\n          <Divider/>\n          </View>\n      </KeyboardAvoidingView>\n\n    </View>\n  );}\n\nexport default CompanyAddItemPage;\n\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      justifyContent: \"center\", \n      alignItems: \"center\",\n  }\n  ,button3: {backgroundColor:\"white\",borderColor:\"green\", borderWidth:2, width:200, padding:15, borderRadius:20, alignItems:\"center\", marginTop:20}\n  ,buttonText1: {color:\"green\", fontWeight:\"700\", fontSize:16}\n  ,input: {backgroundColor:\"white\", width:'80%',paddingHorizontal:15, paddingVertical:10, borderRadius:10, marginVertical:8}\n});"]},"metadata":{},"sourceType":"module"}